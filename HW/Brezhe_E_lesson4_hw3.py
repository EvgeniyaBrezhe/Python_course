# 1) У вас есть список значений my_list и список индексов my_indexes (начинается с нуля и количество элементов совпадает
# с количеством в my_list. Распечатать значения из my_list через обращение по индексу. См. пример выше.
my_list = [4, 134, 356, 444, 54, 68, 701, 8654]
my_indexes = [0, 1, 2, 3, 4, 5, 6, 7]
for index in my_indexes:
    print(my_list[index])
#####################################################

# 2) У вас есть два списка my_list_1 и my_list_2 равной длинны и список индексов my_indexes (начинается с нуля и
# количество элементов совпадает с количеством в my_list_1. Распечатать пары значений из my_list_1 и my_list_2 через
# обращение по индексу.
# Например для списков [1, 3] и [2, 4]:
# (1, 2)
# (3, 4)
my_list_1 = [1, 2, 3, 4, 5]
my_list_2 = ['a', 'b', 'c', 'd', 'e']
my_indexes = [0, 1, 2, 3, 4]
for index in my_indexes:
    pairs = my_list_1[index], my_list_2[index]
    print(pairs)
# #####################################################

# 3) У вас есть строка my_string = '0123456789'. Сгенерировать целые числа (тип int) от 0 до 99 и поместить их в список.
# Задание нужно выполнить ТОЛЬКО через цикл в цикле и приведение типов (См. пример выше). Генерирование через range или
# другие "фишки" я засчитывать не буду ))
my_string = '0123456789'
new_value = []

for symbol_1 in my_string:
    for symbol_2 in my_string:
        new_value.append(symbol_1 + symbol_2)

new_value = list(map(int, new_value))
print(new_value)
