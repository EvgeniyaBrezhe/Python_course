# docs.python.org/3/library
import string
# import random
from random import randint as rnd


# теперь мы можем пользоваться функциями и методами из библиотеки string
# если все-все модули начнем прописывать, то программа будет расти
# если можно обойтисб без импорта, лучше обойтись и написать руками
# letters = string.ascii_letters
# print(letters, type(letters))

# random - псевдослучайные числа
# some_int = rnd(2, 9)
# print(some_int, type(some_int))

# typing - возможность записывать типы данных
# посмотри time!

# внешние модули - существуют в сообществе, ими тоже можно пользоваться

# ФУНКЦИИ
# отдельный кусок кода, маленькая программа внутри программы, само что-то умеет делать

# def имяфункции(параметры, если надо):
#   блок кода
# print - считается, что функция закончилась и стала жить отдельно
# из названия должно быть понятно, что делает эта функция - печатай, удаляй, считай и тд

def print_something():
    print('Hello, world!')


def print_dict(some_dict, test_value):
    # print(test_value) ОЧЕНЬ ПЛОХОЙ ВАРИАНТ, ПОТОМУ ЧТО ФУНКЦИЮ МОЖНО СЛОМАТЬ
    # test_test = 'qwertyy' NameError: name 'test_test' is not defined
    print(test_value)
    for key in some_dict:
        print(f'"{key}": {some_dict[key]}')


points_dict = {'A': (1, 2), 'B': (-2, 4), 'C': (0, -6)}
test_value_1 = 'ya prosto stoka'

print_dict(points_dict, test_value_1)
# print(test_test)
# вначале все импорты, потом все дефы, а потом тело программы
# функции нужны для того, чтобы вы реализовывали DRY - do not repeat yourself

# если мы что-то определили внутри функции, это видно только внутри функции
# если данные есть вне функии, то функция может их видеть, но это плохой вариант, лучше передать через параметры

# утиная типизация - если что-то плавает, как утка, и крякает, как утка, то скорее всего это утка
# функция не знает, что мы передаем ей словарь, но понимает